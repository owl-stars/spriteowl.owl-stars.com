---
title: Documentation
---

.section.cinema
  .container
    .col-xs-12.info
      %h2.title Spriteowl product overview

.section.benefits
  .container
    .row
      .col-xs-12.col-md-10.col-md-offset-1.intro
        %h2 How you benefit from Spriteowl

        %p.introText
          <strong>Writing CSS code for a sprite image is a time-consuming job as you always have to measure x, y, width and height of all sprite elements</strong>. And if elements change or new ones are added, you have no choice but to start measuring again.
          Wouldn't it be great, if you could just do your updates and let someone else take over this annoying job? <strong>Well, lucky you, that's where Spriteowl comes in.</strong>


    .row
      .col-sm-4
        .boxinfo
          %h3.title
            What you get
          %p.content
            With Spriteowl you will not only get an optimized PNG of your Photoshop sprite file, but also a stylesheet which contains <strong>each layer's position (x/y) and dimension (width/height)!</strong>

      .col-sm-4
        .boxinfo
          %h3.title
            Preprocessors support
          %p.content
            When working with one of the preprocessors <strong>LESS, SASS/SCSS or Stylus</strong> you will get a stylesheet as well as useful mixins from the #{link_to 'Cssowl mixin library', 'http://cssowl.owl-stars.com/sprite.html', :target => '_blank'} with a many functions to easily position your sprite elements.

      .col-sm-4
        .boxinfo
          %h3.title
            Namespace support
          %p.content
            Spriteowl uses namespaces to bring sprite elements into your HTML. So by just naming your groups and layers, <strong>you no longer have to worry about position changes of the sprite elements in your original Psd file</strong>.



    .no-spriteowl
      .row
        .col-xs-12.col-md-8.col-md-offset-2.intro
          %h3 The usual workflow with sprites and CSS can drive you mad

      .row
        .col-sm-3
          .box
            .arrow
            =image_tag "content/howto/how1.png", :alt => "", :class => "teaserImg"
            %h3.title Photoshop
            %p.content Create a sprite Psd

        .col-sm-3
          .box
            .arrow
            =image_tag "content/howto/no-how2.png", :alt => "", :class => "teaserImg"
            %h3.title Export Image
            %p.content Export the sprite image


        .col-sm-3
          .box
            .arrow
            =image_tag "content/howto/no-how3-boring.png", :alt => "", :class => "teaserImg"
            %h3.title Measure
            %p.content Look up each element


        .col-sm-3
          .box
            =image_tag "content/howto/no-how4.png", :alt => "", :class => "teaserImg"
            %h3.title Code
            %p.content Write CSS code

    .yes-spriteowl
      .row
        .col-xs-12.col-md-8.col-md-offset-2.intro
          %h2
            Save time and nerves with the Spriteowl way
      .row
        .col-sm-4
          .box
            .arrow
            =image_tag "content/howto/how1.png", :alt => "", :class => "teaserImg"
            %h3.title Photoshop
            %p.content Place your elements and name your groups and layers

        .col-sm-4
          .box
            .arrow
            =image_tag "content/howto/yes-how2-magic.png", :alt => "", :class => "teaserImg"
            %h3.title Spriteowl
            %p.content Choose an export option and let the magic happen!

        .col-sm-4
          .box
            =image_tag "content/howto/yes-how3.png", :alt => "", :class => "teaserImg"
            %h3.title CSS, LESS, SASS/SCSS, Stylus + PNG
            %p.content Import the generated stylesheet + PNG file(s) into your project



.section.bgDark.settings
  .container
    .row
      .col-xs-12.col-md-8.col-md-offset-2.intro
        %h2 The Extension

        %p.introText
          This is what Spriteowl does for you: <strong>In just 3 quick'n'easy steps the extension automatically creates a stylesheet + PNG file(s) directly from Photoshop!</strong>

    .row
      .col-sm-6
        .teaserImg
          =image_tag "content/settings/spriteowl-extension.png", :alt => ""

      .col-sm-6
        %ol
          %li
            .box
              %h3
                Syntax:
              %p
                Select the output syntax. We support CSS, LESS, SASS/SCSS and Stylus.

          %li
            .box
              %h3
                Optimize:
              %p
                Choose this option on and Spriteowl will trim and posterize the output PNG.

          %li
            .box
              %h3
                Export:
              %p
                Click and choose the location where to save the stylesheet + PNG file(s).




.section.example
  .container
    .row
      .col-xs-12.col-md-8.col-md-offset-2.intro
        %h2 A simple walktrough

        %p.introText
          Got you intrigued? <strong>Perfect, because working with Spriteowl is super easy!</strong>

    .row
      .col-md-6
        .nr
          1.
        .content
          %h3
            Photoshop
          %p
            Before exporting sprite with Spriteowl, please <strong>place your elements</strong> and <strong>name your groups and layers</strong>.
            %br
            %br
            %strong Tip:
            %br
            You'll need at least one top level group as Spriteowl will export each of them as a seperate sprite.
            Groups and layers should be named according to class names in HTML, since you will use them later in your stylesheet.
            %br
            %br

      .col-md-6
        .teaserImg
          =image_tag "content/example/psd-layers.png", :alt => ""

    .row
      .col-md-6
        .nr
          2.
        .content
          %h3
            Export
          %p
            Now it's time to export your sprite!
            %br
            %br
            Choose a "<strong>Syntax</strong>", decide whether you want to "<strong>Optimize</strong>" the PNG or not, click "<strong>Export</strong>" and choose a destination folder.
            %br
            After the export you'll find two files in your destination folder: a PNG and a stylesheet.
            If you look into the stylesheet you will see that Spriteowl exactly generated the classes and mixins depending on your syntax and according to the layer and group structure of your sprite Psd.
            %br
            %br
            %strong Tip:
            %br
            Don't forget to download the #{link_to 'Cssowl mixin library', 'http://cssowl.owl-stars.com/sprite.html', :target => '_blank'}.
            %br
            %br

      .col-md-6.exampleextension
        .teaserImg
          =image_tag "content/settings/spriteowl-extension.png", :alt => ""

    .row
      .col-md-6
        .nr
          3.
        .content
          %h3
            How to use the exported files
          %p
            Import your stylsheet and the #{link_to 'Cssowl mixin library', 'http://cssowl.owl-stars.com/sprite.html', :target => '_blank'} into your project and place your sprite elements with the Cssowl mixins.
            %br
            %br
            <strong>Here are a few examples with the HTML and preprocessor code on the right:</strong>
            %br
            %br
          .codeexample
            .example1.box
              .pacman
              .coffe
              .heart
              Example 1 - display()
            .example2.box
              .pacman
              Example 2 - float-left( 10px, 0 )
            .example3.box
              Example 3 - after-absolute-inside( top, center, 0, 10px )

      .col-md-6
        .tabbox
          %ul.nav.nav-tabs
            %li.active.htmltab
              %a{"data-toggle" => "tab", href: "#htmlcode"} HTML
            %li
              %a{"data-toggle" => "tab", href: "#sasscode"} SASS
            %li
              %a{"data-toggle" => "tab", href: "#scsscode"} SCSS
            %li
              %a{"data-toggle" => "tab", href: "#lesscode"} LESS
            %li
              %a{"data-toggle" => "tab", href: "#styluscode"} Stylus


          .tab-content
            #htmlcode.tab-pane.active.code
              = preserve do
                -code("html") do
                  :plain

                    <div class="codeexample">

                      <div class="example1 box">
                        <div class="pacman"></div>
                        <div class="coffe"></div>
                        <div class="heart"></div>
                        Example 1 - display()
                      </div>

                      <div class="example2 box">
                        <div class="pacman"></div>
                        Example 2 - float-left( 10px, 0 )
                      </div>

                      <div class="example3 box">
                        Example 3 - after-absolute-inside( top, center, 0, 10px )
                      </div>


            #sasscode.tab-pane.code
              = preserve do
                -code("sass") do
                  :plain
                    @import "cssowl/lib/sass/cssowl"
                    $examplesprite: url("examplesprite.png")

                    .codeexample

                      .box
                        padding: 10px
                        margin: 20px 0

                      .example1
                        .pacman
                          +examplesprite-icon-pacMan-display-inline()
                        .coffe
                          +examplesprite-icon-coffe-display-inline()
                        .heart
                          +examplesprite-logo-heart-display-inline()

                      .example2 .pacman
                        +examplesprite-icon-pacMan-float-left(10px,0)

                      .example3
                        text-align: center
                        padding-top: 30px
                        +examplesprite-icon-coffe-after-absolute-inside(top, center, 0, 10px)



            #scsscode.tab-pane.code
              = preserve do
                -code("scss") do
                  :plain
                    @import "cssowl/lib/scss/cssowl";
                    $examplesprite: url("examplesprite.png");

                    .codeexample {

                      .box {
                        padding: 10px;
                        margin: 20px 0;
                      }

                      .example1 {
                        .pacman {
                          @include examplesprite-icon-pacMan-display-inline();
                        }
                        .coffe {
                          @include examplesprite-icon-coffe-display-inline();
                        }
                        .heart {
                          @include examplesprite-logo-heart-display-inline();
                        }
                      }

                      .example2 .pacman {
                        @include examplesprite-icon-pacMan-float-left(10px,0);
                      }

                      .example3 {
                        padding-top: 30px;
                        text-align: center;
                        @include examplesprite-icon-coffe-after-absolute-inside(top, center, 0, 10px);
                      }
                    }


            #lesscode.tab-pane.code
              = preserve do
                -code("scss") do
                  :plain
                    @import "cssowl/lib/less/cssowl";
                    @examplesprite: url("examplesprite.png");

                    .codeexample {

                      .box {
                        padding: 10px;
                        margin: 20px 0;
                      }

                      .example1 {
                        .pacman {
                          .examplesprite-icon-pacMan-display-inline();
                        }
                        .coffe {
                          .examplesprite-icon-coffe-display-inline();
                        }
                        .heart {
                          .examplesprite-logo-heart-display-inline();
                        }
                      }

                      .example2 .pacman {
                        .examplesprite-icon-pacMan-float-left(10px, 0);
                      }

                      .example3 {
                        padding-top: 30px;
                        text-align: center;
                        .examplesprite-icon-coffe-after-absolute-inside(top, center, 0, 10px);
                      }
                    }

            #styluscode.tab-pane.code
              = preserve do
                -code("sass") do
                  :plain
                    @import "cssowl/lib/styl/cssowl"
                    examplesprite: url("examplesprite.png")

                    .codeexample

                      .box
                        padding: 10px
                        margin: 20px 0

                      .example1
                        .pacman
                          examplesprite-icon-pacMan-display-inline()
                        .coffe
                          examplesprite-icon-coffe-display-inline()
                        .heart
                          examplesprite-logo-heart-display-inline()

                      .example2
                        .pacman
                          examplesprite-icon-pacMan-float-left(10px,0)

                      .example3
                        text-align: center
                        padding-top: 30px
                        examplesprite-icon-coffe-after-absolute-inside(top, center, 0, 10px)

.section.bgDark.mixins
  .container
    .row
      .col-xs-12.col-md-8.col-md-offset-2.intro
        %h2 Variables

        %p.introText
          Each layer exposes its <strong>x</strong>, <strong>y</strong>, <strong>width</strong>, <strong>height</strong> and <strong>src</strong> as variables.

    .row
      .col-sm-12

        .tabbox

          %ul.nav.nav-tabs
            %li.active
              %a{"data-toggle" => "tab", href: "#sassvars"} SASS
            %li
              %a{"data-toggle" => "tab", href: "#scssvars"} SCSS
            %li
              %a{"data-toggle" => "tab", href: "#lessvars"} LESS
            %li
              %a{"data-toggle" => "tab", href: "#stylusvars"} Stylus

          .tab-content

            #sassvars.tab-pane.code.active
              = preserve do
                -code("sass") do
                  :plain
                    $examplesprite-icon-pacMan-x: -11px
                    $examplesprite-icon-pacMan-y: -10px
                    $examplesprite-icon-pacMan-width: 27px
                    $examplesprite-icon-pacMan-height: 30px
                    $examplesprite-icon-pacMan-src: $examplesprite

            #scssvars.tab-pane.code
              = preserve do
                -code("scss") do
                  :plain
                    $examplesprite-icon-pacMan-x: -11px;
                    $examplesprite-icon-pacMan-y: -10px;
                    $examplesprite-icon-pacMan-width: 27px;
                    $examplesprite-icon-pacMan-height: 30px;
                    $examplesprite-icon-pacMan-src: $examplesprite;

            #lessvars.tab-pane.code
              = preserve do
                -code("scss") do
                  :plain
                    @examplesprite-icon-pacMan-x: -11px;
                    @examplesprite-icon-pacMan-y: -10px;
                    @examplesprite-icon-pacMan-width: 27px;
                    @examplesprite-icon-pacMan-height: 30px;
                    @examplesprite-icon-pacMan-src: @examplesprite;

            #stylusvars.tab-pane.code
              = preserve do
                -code("sass") do
                  :plain
                    examplesprite-icon-pacMan-x = -11px
                    examplesprite-icon-pacMan-y = -10px
                    examplesprite-icon-pacMan-width = 27px
                    examplesprite-icon-pacMan-height = 30px
                    examplesprite-icon-pacMan-src = examplesprite

    .row
      .col-xs-12.col-md-8.col-md-offset-2.intro
        %h2 Mixins

        %p.introText
          In addition to it's variables, each layer includes the Cssowl sprite mixins. For more details and examples check out the #{link_to 'documentation', 'http://cssowl.owl-stars.com/sprite.html', :target => '_blank'}.

    .row
      .col-sm-12

        .tabbox

          %ul.nav.nav-tabs
            %li.active
              %a{"data-toggle" => "tab", href: "#sassmixins"} SASS
            %li
              %a{"data-toggle" => "tab", href: "#scssmixins"} SCSS
            %li
              %a{"data-toggle" => "tab", href: "#lessmixins"} LESS
            %li
              %a{"data-toggle" => "tab", href: "#stylusmixins"} Stylus

          .tab-content
            #sassmixins.tab-pane.code.active
              = preserve do
                -code("sass") do
                  :plain
                    // position
                    @mixin examplesprite-icon-pacMan-position() ...
                    // absolute
                    @mixin examplesprite-icon-pacMan-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    @mixin examplesprite-icon-pacMan-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    @mixin examplesprite-icon-pacMan-absolute(@top:none, @right:none, @bottom:none, @left:none) ...
                    // after
                    @mixin examplesprite-icon-pacMan-after-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    @mixin examplesprite-icon-pacMan-after-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    @mixin examplesprite-icon-pacMan-after-absolute(@top:none, @right:none, @bottom:none, @left:none) ...
                    @mixin examplesprite-icon-pacMan-after-float(@xOffset:0, @yOffset:0) ...
                    @mixin examplesprite-icon-pacMan-after-inline(@xOffset:0, @yOffset:0, @valign:middle) ...
                    @mixin examplesprite-icon-pacMan-after() ...
                    // before
                    @mixin examplesprite-icon-pacMan-before-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    @mixin examplesprite-icon-pacMan-before-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    @mixin examplesprite-icon-pacMan-before-absolute(@top:none, @right:none, @bottom:none, @left:none) ...
                    @mixin examplesprite-icon-pacMan-before-float(@xOffset:0, @yOffset:0) ...
                    @mixin examplesprite-icon-pacMan-before-inline(@xOffset:0, @yOffset:0, @valign:middle) ...
                    @mixin examplesprite-icon-pacMan-before() ...
                    // display
                    @mixin examplesprite-icon-pacMan-display-block() ...
                    @mixin examplesprite-icon-pacMan-display-inline(@yOffset:0, @valign:middle) ...
                    @mixin examplesprite-icon-pacMan-display() ...
                    // float
                    @mixin examplesprite-icon-pacMan-float-left(@xOffset:0, @yOffset:0) ...
                    @mixin examplesprite-icon-pacMan-float-right(@xOffset:0, @yOffset:0) ...
                    // replace
                    @mixin examplesprite-icon-pacMan-replace-block() ...
                    @mixin examplesprite-icon-pacMan-replace-inline(@yOffset:0, @valign:middle) ...
                    @mixin examplesprite-icon-pacMan-replace() ...

            #scssmixins.tab-pane.code
              = preserve do
                -code("scss") do
                  :plain
                    // position
                    @mixin examplesprite-icon-pacMan-position() { ... }
                    // absolute
                    @mixin examplesprite-icon-pacMan-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    @mixin examplesprite-icon-pacMan-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    @mixin examplesprite-icon-pacMan-absolute(@top:none, @right:none, @bottom:none, @left:none) { ... }
                    // after
                    @mixin examplesprite-icon-pacMan-after-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    @mixin examplesprite-icon-pacMan-after-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    @mixin examplesprite-icon-pacMan-after-absolute(@top:none, @right:none, @bottom:none, @left:none) { ... }
                    @mixin examplesprite-icon-pacMan-after-float(@xOffset:0, @yOffset:0) { ... }
                    @mixin examplesprite-icon-pacMan-after-inline(@xOffset:0, @yOffset:0, @valign:middle) { ... }
                    @mixin examplesprite-icon-pacMan-after() { ... }
                    // before
                    @mixin examplesprite-icon-pacMan-before-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    @mixin examplesprite-icon-pacMan-before-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    @mixin examplesprite-icon-pacMan-before-absolute(@top:none, @right:none, @bottom:none, @left:none) { ... }
                    @mixin examplesprite-icon-pacMan-before-float(@xOffset:0, @yOffset:0) { ... }
                    @mixin examplesprite-icon-pacMan-before-inline(@xOffset:0, @yOffset:0, @valign:middle) { ... }
                    @mixin examplesprite-icon-pacMan-before() { ... }
                    // display
                    @mixin examplesprite-icon-pacMan-display-block() { ... }
                    @mixin examplesprite-icon-pacMan-display-inline(@yOffset:0, @valign:middle) { ... }
                    @mixin examplesprite-icon-pacMan-display() { ... }
                    // float
                    @mixin examplesprite-icon-pacMan-float-left(@xOffset:0, @yOffset:0) { ... }
                    @mixin examplesprite-icon-pacMan-float-right(@xOffset:0, @yOffset:0) { ... }
                    // replace
                    @mixin examplesprite-icon-pacMan-replace-block() { ... }
                    @mixin examplesprite-icon-pacMan-replace-inline(@yOffset:0, @valign:middle) { ... }
                    @mixin examplesprite-icon-pacMan-replace() { ... }

            #lessmixins.tab-pane.code
              = preserve do
                -code("scss") do
                  :plain
                    // position
                    .examplesprite-icon-pacMan-position() { ... }
                    // absolute
                    .examplesprite-icon-pacMan-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    .examplesprite-icon-pacMan-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    .examplesprite-icon-pacMan-absolute(@top:none, @right:none, @bottom:none, @left:none) { ... }
                    // after
                    .examplesprite-icon-pacMan-after-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    .examplesprite-icon-pacMan-after-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    .examplesprite-icon-pacMan-after-absolute(@top:none, @right:none, @bottom:none, @left:none) { ... }
                    .examplesprite-icon-pacMan-after-float(@xOffset:0, @yOffset:0) { ... }
                    .examplesprite-icon-pacMan-after-inline(@xOffset:0, @yOffset:0, @valign:middle) { ... }
                    .examplesprite-icon-pacMan-after() { ... }
                    // before
                    .examplesprite-icon-pacMan-before-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    .examplesprite-icon-pacMan-before-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) { ... }
                    .examplesprite-icon-pacMan-before-absolute(@top:none, @right:none, @bottom:none, @left:none) { ... }
                    .examplesprite-icon-pacMan-before-float(@xOffset:0, @yOffset:0) { ... }
                    .examplesprite-icon-pacMan-before-inline(@xOffset:0, @yOffset:0, @valign:middle) { ... }
                    .examplesprite-icon-pacMan-before() { ... }
                    // display
                    .examplesprite-icon-pacMan-display-block() { ... }
                    .examplesprite-icon-pacMan-display-inline(@yOffset:0, @valign:middle) { ... }
                    .examplesprite-icon-pacMan-display() { ... }
                    // float
                    .examplesprite-icon-pacMan-float-left(@xOffset:0, @yOffset:0) { ... }
                    .examplesprite-icon-pacMan-float-right(@xOffset:0, @yOffset:0) { ... }
                    // replace
                    .examplesprite-icon-pacMan-replace-block() { ... }
                    .examplesprite-icon-pacMan-replace-inline(@yOffset:0, @valign:middle) { ... }
                    .examplesprite-icon-pacMan-replace() { ... }


            #stylusmixins.tab-pane.code
              = preserve do
                -code("sass") do
                  :plain
                    // position
                    examplesprite-icon-pacMan-position() ...
                    // absolute
                    examplesprite-icon-pacMan-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    examplesprite-icon-pacMan-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    examplesprite-icon-pacMan-absolute(@top:none, @right:none, @bottom:none, @left:none) ...
                    // after
                    examplesprite-icon-pacMan-after-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    examplesprite-icon-pacMan-after-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    examplesprite-icon-pacMan-after-absolute(@top:none, @right:none, @bottom:none, @left:none) ...
                    examplesprite-icon-pacMan-after-float(@xOffset:0, @yOffset:0) ...
                    examplesprite-icon-pacMan-after-inline(@xOffset:0, @yOffset:0, @valign:middle) ...
                    examplesprite-icon-pacMan-after() ...
                    // before
                    examplesprite-icon-pacMan-before-absolute-inside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    examplesprite-icon-pacMan-before-absolute-outside(@valign:top, @halign:left, @xOffset:0, @yOffset:0) ...
                    examplesprite-icon-pacMan-before-absolute(@top:none, @right:none, @bottom:none, @left:none) ...
                    examplesprite-icon-pacMan-before-float(@xOffset:0, @yOffset:0) ...
                    examplesprite-icon-pacMan-before-inline(@xOffset:0, @yOffset:0, @valign:middle) ...
                    examplesprite-icon-pacMan-before() ...
                    // display
                    examplesprite-icon-pacMan-display-block() ...
                    examplesprite-icon-pacMan-display-inline(@yOffset:0, @valign:middle) ...
                    examplesprite-icon-pacMan-display() ...
                    // float
                    examplesprite-icon-pacMan-float-left(@xOffset:0, @yOffset:0) ...
                    examplesprite-icon-pacMan-float-right(@xOffset:0, @yOffset:0) ...
                    // replace
                    examplesprite-icon-pacMan-replace-block() ...
                    examplesprite-icon-pacMan-replace-inline(@yOffset:0, @valign:middle) ...
                    examplesprite-icon-pacMan-replace() ...
